{"version":3,"file":"Mailbox.js","sourceRoot":"","sources":["../src/Mailbox.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,IAAI,kBAAkB,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAU1F,MAAM,EAAE,qBAAqB,EAAE,GAAG,kBAAkB,CAAC;AACrD,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,qBAAqB,CAAC,CAAC;AAEzE,MAAM,OAAO,OAAO;IAKlB;QACE,IAAI,CAAC,0BAA0B,GAAG,IAAI,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,iCAAiC,GAAG,IAAI,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,kBAAkB,CAAC,WAAW,CAC5B,4BAA4B,EAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAClC,CAAC;QACF,kBAAkB,CAAC,WAAW,CAC5B,mCAAmC,EACnC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CACzC,CAAC;QACF,kBAAkB,CAAC,WAAW,CAC5B,wBAAwB,EACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAC9B,CAAC;IACJ,CAAC;IAED,4BAA4B,CAAC,YAAoB,EAAE,QAAmC;QACpF,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,mCAAmC,CACjC,YAAoB,EACpB,QAA0C;QAE1C,IAAI,CAAC,iCAAiC,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IAED,+BAA+B,CAAC,YAAoB;QAClD,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACvD,CAAC;IAED,sCAAsC,CAAC,YAAoB;QACzD,IAAI,CAAC,iCAAiC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC9D,CAAC;IAED,wBAAwB,CAAC,oBAA2C;QAClE,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;IACpD,CAAC;IAEO,wBAAwB,CAAC,YAA+B;QAC9D,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,iCAAiC,CAAC,MAAM,EAAE,EAAE;YACpE,QAAQ,CAAC,YAAY,CAAC,CAAC;SACxB;IACH,CAAC;IAEO,iBAAiB,CAAC,eAAgC;QACxD,KAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,EAAE;YAC7D,QAAQ,CAAC,eAAe,CAAC,CAAC;SAC3B;IACH,CAAC;IAEO,aAAa,CAAC,YAA0B;QAC9C,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAChD;IACH,CAAC;CACF","sourcesContent":["import { EventEmitter as NativeEventEmitter, NativeModulesProxy } from '@unimodules/core';\nimport {\n  OnUserInteractionListener,\n  OnForegroundNotificationListener,\n  UserInteraction,\n  LocalNotification,\n  OnTokenChangeListener,\n  TokenMessage,\n} from './Notifications.types';\n\nconst { ExponentNotifications } = NativeModulesProxy;\nconst DeviceEventEmitter = new NativeEventEmitter(ExponentNotifications);\n\nexport class Mailbox {\n  private onUserInteractionListeners: Map<string, OnUserInteractionListener>;\n  private onForegroundNotificationListeners: Map<string, OnForegroundNotificationListener>;\n  private onTokenChangeListener: OnTokenChangeListener | null;\n\n  constructor() {\n    this.onUserInteractionListeners = new Map();\n    this.onForegroundNotificationListeners = new Map();\n    this.onTokenChangeListener = null;\n    DeviceEventEmitter.addListener(\n      'Exponent.onUserInteraction',\n      this.onUserInteraction.bind(this)\n    );\n    DeviceEventEmitter.addListener(\n      'Exponent.onForegroundNotification',\n      this.onForegroundNotification.bind(this)\n    );\n    DeviceEventEmitter.addListener(\n      'Exponent.onTokenChange',\n      this.onTokenChange.bind(this)\n    );\n  }\n\n  addOnUserInteractionListener(listenerName: string, listener: OnUserInteractionListener) {\n    this.onUserInteractionListeners.set(listenerName, listener);\n  }\n\n  addOnForegroundNotificationListener(\n    listenerName: string,\n    listener: OnForegroundNotificationListener\n  ) {\n    this.onForegroundNotificationListeners.set(listenerName, listener);\n  }\n\n  removeOnUserInteractionListener(listenerName: string) {\n    this.onUserInteractionListeners.delete(listenerName);\n  }\n\n  removeOnForegroundNotificationListener(listenerName: string) {\n    this.onForegroundNotificationListeners.delete(listenerName);\n  }\n\n  setOnTokenChangeListener(onTokenChangeListner: OnTokenChangeListener) {\n    this.onTokenChangeListener = onTokenChangeListner;\n  }\n\n  private onForegroundNotification(notification: LocalNotification) {\n    for (let listener of this.onForegroundNotificationListeners.values()) {\n      listener(notification);\n    }\n  }\n\n  private onUserInteraction(userInteraction: UserInteraction) {\n    for (let listener of this.onUserInteractionListeners.values()) {\n      listener(userInteraction);\n    }\n  }\n\n  private onTokenChange(tokenMessage: TokenMessage) {\n    if (this.onTokenChangeListener != null) {\n      this.onTokenChangeListener(tokenMessage.token);\n    }\n  }\n}\n"]}