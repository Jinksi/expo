{"version":3,"file":"Notifications.types.js","sourceRoot":"","sources":["../src/Notifications.types.ts"],"names":[],"mappings":"","sourcesContent":["export type Notification = {\n  origin: 'selected' | 'received';\n  data: any;\n  remote: boolean;\n  isMultiple: boolean;\n};\n\nexport type LocalNotification = {\n  title: string;\n  // How should we deal with body being required on iOS but not on Android?\n  body?: string;\n  data?: any;\n  categoryId?: string;\n  ios?: {\n    sound?: boolean;\n    _displayInForeground?: boolean;\n  };\n  android?: {\n    channelId?: string;\n    icon?: string;\n    color?: string;\n    sticky?: boolean;\n    link?: string;\n  };\n  web?: NotificationOptions;\n  remote?: boolean;\n};\n\nexport type Channel = {\n  name: string;\n  description?: string;\n  priority?: string;\n  sound?: boolean;\n  vibrate?: boolean | number[];\n  badge?: boolean;\n};\n\nexport type ActionType = {\n  actionId: string;\n  buttonTitle: string;\n  isDestructive?: boolean;\n  isAuthenticationRequired?: boolean;\n  doNotOpenInForeground?: boolean;\n  textInput?: {\n    submitButtonTitle: string;\n    placeholder: string;\n  };\n};\n\nexport type UserInteraction = LocalNotification & {\n    actionId?: string;\n    userText?: string;\n}\n\nexport type TokenMessage = {\n  token: string;\n}\n\nexport type OnUserInteractionListener = (userInteraction: UserInteraction) => void;\n\nexport type OnForegroundNotificationListener = (notification: LocalNotification) => void;\n\nexport type OnTokenChangeListener = (token: string) => void;\n"]}