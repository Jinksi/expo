{"version":3,"file":"Notifications.js","sourceRoot":"","sources":["../src/Notifications.ts"],"names":[],"mappings":"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","sourcesContent":["import Constants from 'expo-constants';\nimport { EventEmitter, EventSubscription } from 'fbemitter';\nimport invariant from 'invariant';\nimport { AsyncStorage, Platform } from 'react-native';\nimport { CodedError, RCTDeviceEventEmitter, UnavailabilityError } from '@unimodules/core';\nimport ExponentNotifications from './ExponentNotifications';\nimport { Mailbox } from './Mailbox';\nimport {\n  Notification,\n  LocalNotification,\n  Channel,\n  ActionType,\n  UserInteraction,\n  OnUserInteractionListener,\n  OnForegroundNotificationListener,\n  OnTokenChangeListener,\n} from './Notifications.types';\n\nconst _mailbox: Mailbox = new Mailbox();\n\nfunction _processNotification(notification) {\n  notification = Object.assign({}, notification);\n\n  if (!notification.data) {\n    notification.data = {};\n  }\n\n  if (notification.hasOwnProperty('count')) {\n    delete notification.count;\n  }\n\n  // Delete any Android properties on iOS and merge the iOS properties on root notification object\n  if (Platform.OS === 'ios') {\n    if (notification.android) {\n      delete notification.android;\n    }\n\n    if (notification.ios) {\n      notification = Object.assign(notification, notification.ios);\n      notification.data._displayInForeground = notification.ios._displayInForeground;\n      delete notification.ios;\n    }\n  }\n\n  // Delete any iOS properties on Android and merge the Android properties on root notification\n  // object\n  if (Platform.OS === 'android') {\n    if (notification.ios) {\n      delete notification.ios;\n    }\n\n    if (notification.android) {\n      notification = Object.assign(notification, notification.android);\n      delete notification.android;\n    }\n  }\n\n  return notification;\n}\n\nfunction _validateNotification(notification) {\n  if (Platform.OS === 'ios') {\n    invariant(\n      !!notification.title && !!notification.body,\n      'Local notifications on iOS require both a title and a body'\n    );\n  } else if (Platform.OS === 'android') {\n    invariant(!!notification.title, 'Local notifications on Android require a title');\n  }\n}\n\nexport async function getInitialUserInteractionAsync(): Promise<UserInteraction | null> {\n  return ExponentNotifications.getInitialUserInteractionAsync();\n}\n\n// User passes set of actions titles.\nexport async function createCategoryAsync(categoryId: string, actions: ActionType[]): Promise<void> {\n  return ExponentNotifications.createCategoryAsync(categoryId, actions);\n}\n\nexport async function deleteCategoryAsync(categoryId: string): Promise<void> {\n  return ExponentNotifications.deleteCategoryAsync(categoryId);\n}\n\nexport async function createChannelAsync(id: string, channel: Channel): Promise<void> {\n  if (Platform.OS !== 'android') {\n    console.warn(`createChannelAndroidAsync(...) has no effect on ${Platform.OS}`);\n    return Promise.resolve();\n  }\n  return ExponentNotifications.createChannel(id, channel);\n}\n\nexport async function deleteChannelAsync(id: string): Promise<void> {\n  if (Platform.OS !== 'android') {\n    console.warn(`deleteChannelAndroidAsync(...) has no effect on ${Platform.OS}`);\n    return Promise.resolve();\n  }\n  return ExponentNotifications.deleteChannel(id);\n}\n\nexport async function createChannelGroupAsync(groupId: string, groupName: string): Promise<void> {\n  return ExponentNotifications.createChannelGroup(groupId, groupName);\n}\n\nexport async function deleteChannelGroupAsync(groupId: string): Promise<void> {\n  return ExponentNotifications.deleteChannelGroup(groupId);\n}\n\n/**\n * @remarks\n * Shows a notification instantly\n */\n\nexport async function presentLocalNotificationAsync(\n  notification: LocalNotification\n): Promise<string> {\n  _validateNotification(notification);\n  let nativeNotification = _processNotification(notification);\n  return await ExponentNotifications.presentLocalNotification(nativeNotification);\n}\n\n/**\n * @remarks\n * Dismiss currently shown notification with ID (Android only)\n */\nexport async function dismissNotificationAsync(notificationId: string): Promise<void> {\n  if (!ExponentNotifications.dismissNotification) {\n    throw new UnavailabilityError('Expo.Notifications', 'dismissNotification');\n  }\n  return await ExponentNotifications.dismissNotification(notificationId);\n}\n/**\n * @remarks\n * Dismiss all currently shown notifications (Android only)\n */\nexport async function dismissAllNotificationsAsync(): Promise<void> {\n  if (!ExponentNotifications.dismissAllNotifications) {\n    throw new UnavailabilityError('Expo.Notifications', 'dismissAllNotifications');\n  }\n  return await ExponentNotifications.dismissAllNotifications();\n}\n/**\n * @remarks\n * Cancel scheduled notification notification with ID\n */\nexport async function cancelScheduledNotificationAsync(\n  notificationId: string\n): Promise<void> {\n  return ExponentNotifications.cancelScheduledNotificationAsync(notificationId);\n}\n\n/**\n * @remarks\n * Cancel all scheduled notifications\n */\nexport async function cancelAllScheduledNotificationsAsync(): Promise<void> {\n  return ExponentNotifications.cancelAllScheduledNotificationsAsync();\n}\n\nexport async function setBadgeNumberAsync(number: number): Promise<void> {\n  if (!ExponentNotifications.setBadgeNumberAsync) {\n    throw new UnavailabilityError('Expo.Notifications', 'setBadgeNumberAsync');\n  }\n  return ExponentNotifications.setBadgeNumberAsync(number);\n}\n\nexport async function setOnTokenChangeListener(listener: OnTokenChangeListener) {\n  _mailbox.setOnTokenChangeListener(listener);\n  await ExponentNotifications.registerForPushNotificationsAsync();\n}\n\nexport function addOnUserInteractionListener(\n  listenerName: string,\n  listener: OnUserInteractionListener\n) {\n  _mailbox.addOnUserInteractionListener(listenerName, listener);\n}\n\nexport function addOnForegroundNotificationListener(\n  listenerName: string,\n  listener: OnForegroundNotificationListener\n) {\n  _mailbox.addOnForegroundNotificationListener(listenerName, listener);\n}\n\nexport function removeOnUserInteractionListener(listenerName: string) {\n  _mailbox.removeOnUserInteractionListener(listenerName);\n}\n\nexport function removeOnForegroundNotificationListener(listenerName: string) {\n  _mailbox.removeOnForegroundNotificationListener(listenerName);\n}\n\nexport async function scheduleNotificationWithCalendarAsync(\n  notification: LocalNotification,\n  options: {\n    year?: number;\n    month?: number;\n    hour?: number;\n    day?: number;\n    minute?: number;\n    second?: number;\n    weekDay?: number;\n    repeat?: boolean;\n  } = {}\n): Promise<string> {\n  const areOptionsValid: boolean =\n    (options.month == null || isInRangeInclusive(options.month, 1, 12)) &&\n    (options.day == null || isInRangeInclusive(options.day, 1, 31)) &&\n    (options.hour == null || isInRangeInclusive(options.hour, 0, 23)) &&\n    (options.minute == null || isInRangeInclusive(options.minute, 0, 59)) &&\n    (options.second == null || isInRangeInclusive(options.second, 0, 59)) &&\n    (options.weekDay == null || isInRangeInclusive(options.weekDay, 1, 7)) &&\n    (options.weekDay == null || options.day == null);\n\n  if (!areOptionsValid) {\n    throw new CodedError(\n      'WRONG_OPTIONS',\n      'Options in scheduleNotificationWithCalendarAsync call were incorrect!'\n    );\n  }\n\n  _validateNotification(notification);\n  let nativeNotification = _processNotification(notification);\n  return ExponentNotifications.scheduleNotificationWithCalendar(nativeNotification, options);\n}\n\nexport async function scheduleNotificationWithTimerAsync(\n  notification: LocalNotification,\n  options: {\n    interval: number;\n    repeat?: boolean;\n  }\n): Promise<string> {\n  if (options.interval < 1) {\n    throw new CodedError('WRONG_OPTIONS', 'Interval must be not less then 1');\n  }\n  _validateNotification(notification);\n  let nativeNotification = _processNotification(notification);\n  return ExponentNotifications.scheduleNotificationWithTimer(nativeNotification, options);\n}\n\nfunction isInRangeInclusive(variable: number, min: number, max: number): boolean {\n  return variable >= min && variable <= max;\n}\n\n/*\n * Legacy code\n */\n\nlet _emitter;\n\nfunction _maybeInitEmitter() {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    addOnUserInteractionListener('legacyListener', (userInteraction: UserInteraction) => {\n      let legacyMsg: Notification = {\n        data: userInteraction,\n        origin: 'selected',\n        remote: userInteraction.remote == true,\n        isMultiple: false,\n      };\n\n      _emitter.emit('notification', legacyMsg);\n    });\n    addOnForegroundNotificationListener('legacyListener', (notification: LocalNotification) => {\n      let legacyMsg: Notification = {\n        data: notification,\n        origin: 'received',\n        remote: notification.remote == true,\n        isMultiple: false,\n      };\n\n      _emitter.emit('notification', legacyMsg);\n    });\n  }\n}\n\nexport function addListener(listener: (notification: Notification) => unknown): EventSubscription {\n  _maybeInitEmitter();\n  return _emitter.addListener('notification', listener);\n}\n"]}